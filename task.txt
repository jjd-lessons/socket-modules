Часть №1
Клиент и сервер общаются по средствам передачи сообщений.
Сообщение хранит: текст сообщения и дату и время отправки сообщения с временной зоной.

2. Клиент (при входе пользователь должен ввести свое имя):
2.1. запрашивает текст сообщения (запрос) у пользователя
2.2. устанавливает соединение с сервером
2.3. создает экземпляр сообщения
2.4. отправляет сообщение на сервер
2.5. получает ответ
2.6. выводит полученный ответ в консоль
2.7. закрывает соединение с сервером
И так до тех пор, пока пользователь не введет '/exit'

3. Сервер:
3.1. устанавливает соединение с клиентом
3.2. получает от клиента сообщение
3.3. формирует ответное сообщение (с произвольным текстом)
3.4. отправляет сообщение клиенту
3.5. ждет новое подключение

При создании клиента в конструктор передается экземпляр InetSocketAddress, который хранит IP сервера и порт.
При создании сервера в конструктор передается номер порта (int), по которому клиенты смогут подключаться к серверу.

Записывать в файл users.log время входа и имя пользователя каждый раз, когда пользователь входит в программу
Записывать в файл users.log время выхода и имя пользователя каждый раз, когда пользователь завершает работу
Записывать в файл connections-error.log ошибки подключения, передачи и получения сообщений

Часть №2
Расширение функционала сервера.

Сервер может обрабатывать следующие запросы:
/help - список доступных запросов и их описание
/ping - время ответа сервера
/requests - количество успешно обработанных запросов
/popular - название самого популярного запроса

Если сервер не может обработать запрос (пришла команда, которую не может обработать сервер),
он должен отправить клиенту сообщение с соответствующей информацией.

После выполнения ДЗ:
1. выполнить commit и отправить изменения в удаленный репозиторий
2. далее на гитхабе перейдете в репозиторий на вкладку pull request
3. нажмете зеленую кнопку New Pull Request
4. заполните название, описание и нажмете зеленую кнопку Create Pull Request






client

пользователь вводит имя
начало цикла
пользователь вводит текст сообщения
ClassName connector = new ClassName(new Socket("127.0.0.1", 2222));
connector.send(new Message(username, text));

Message fromServer = connector.read();

server
ClassName connector = new ClassName(serverSocket.accept());
Message fromClient = connector.read();

connector.send(new Message("server", "text"));
















